// frontend/src/pages/ReportProblemPage.tsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const ReportProblemPage: React.FC = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    problemType: '',
    title: '',
    description: '',
    address: '',
  });

  const problemTypes = [
    { value: 'road', label: '–Ø–º–∞ –Ω–∞ –¥–æ—Ä–æ–≥–µ' },
    { value: 'light', label: '–°–ª–æ–º–∞–Ω–Ω—ã–π —Ñ–æ–Ω–∞—Ä—å' },
    { value: 'garbage', label: '–ù–µ–≤—ã–≤–µ–∑–µ–Ω–Ω—ã–π –º—É—Å–æ—Ä' },
    { value: 'water', label: '–ü—Ä–æ—Ç–µ—á–∫–∞ –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥–∞' },
    { value: 'tree', label: '–û–ø–∞—Å–Ω–æ–µ –¥–µ—Ä–µ–≤–æ' },
    { value: 'other', label: '–î—Ä—É–≥–æ–µ' }
  ];

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log('–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:', formData);
    alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! (–ø–æ–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª—å)');
    navigate('/');
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleLocationDetect = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          alert(`–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ! –®–∏—Ä–æ—Ç–∞: ${position.coords.latitude}, –î–æ–ª–≥–æ—Ç–∞: ${position.coords.longitude}`);
        },
        (error) => {
          console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è:', error);
          alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ');
        }
      );
    } else {
      alert('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º');
    }
  };

  return (
    <div className="card">
      <h2>–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ</h2>
      
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label htmlFor="problemType">–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã *</label>
          <select
            id="problemType"
            name="problemType"
            value={formData.problemType}
            onChange={handleChange}
            required
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–±–ª–µ–º—ã</option>
            {problemTypes.map(type => (
              <option key={type.value} value={type.value}>
                {type.label}
              </option>
            ))}
          </select>
        </div>

        <div className="form-group">
          <label htmlFor="title">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ *</label>
          <input
            type="text"
            id="title"
            name="title"
            value={formData.title}
            onChange={handleChange}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: '–ì–ª—É–±–æ–∫–∞—è —è–º–∞ –Ω–∞ —Ç—Ä–æ—Ç—É–∞—Ä–µ'"
            required
          />
        </div>

        <div className="form-group">
          <label htmlFor="description">–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
          <textarea
            id="description"
            name="description"
            value={formData.description}
            onChange={handleChange}
            placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ..."
            rows={4}
          />
        </div>

        <div className="form-group">
          <label>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ *</label>
          <button 
            type="button" 
            className="btn btn-secondary"
            onClick={handleLocationDetect}
            style={{ marginBottom: '10px' }}
          >
            üìç –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
          </button>
          <input
            type="text"
            name="address"
            value={formData.address}
            onChange={handleChange}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–µ"
            required
          />
        </div>

        <div className="form-group">
          <label>–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ</label>
          <input
            type="file"
            accept="image/*"
            style={{ marginTop: '5px' }}
          />
          <small>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–º–æ–≥–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É</small>
        </div>

        <div style={{ display: 'flex', gap: '1rem', marginTop: '2rem' }}>
          <button 
            type="button" 
            className="btn btn-secondary"
            onClick={() => navigate('/')}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button type="submit" className="btn">
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
          </button>
        </div>
      </form>
    </div>
  );
};

export default ReportProblemPage;